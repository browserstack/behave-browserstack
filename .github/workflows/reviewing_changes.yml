# This job is to test different profiles in sdk branch against Pull Requests raised
# This workflow targets behave

name: Behave Test workflow for Python from workflow_dispatch

on:
  workflow_dispatch:
    inputs:
      pull_request_number:
        description: 'The pull request number to build'
        required: true

jobs:
  comment-run:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        python: ['3.7', '3.10', '3.11']
        os: [ macos-latest, windows-latest, ubuntu-latest ]
    name: Behave Repo ${{ matrix.python }} - ${{ matrix.os }} Sample
    env:
      BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
      BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}

    steps:
      - uses: actions/checkout@v3
        with:
          ref: refs/pull/${{ github.event.inputs.pull_request_number }}/head
      - name: Fetch Commit SHA
        run: |
          git log -1 --format='%H'
          echo "commit_sha=$(git log -1 --format='%H')" >> $GITHUB_ENV
          echo "commit_sha=$(git log -1 --format='%H')" >> $env:GITHUB_ENV
      - uses: actions/github-script@98814c53be79b1d30f795b907e553d8679345975
        id: status-check-in-progress
        env:
          job_name: Behave Repo ${{ matrix.python }} - ${{ matrix.os }} Sample
        with:
          github-token: ${{ github.token }}
          script: |
            const result = await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: process.env.job_name,
              head_sha: process.env.commit_sha,
              status: 'in_progress'
            }).catch((err) => ({status: err.status, response: err.response}));
            console.log(`The status-check response : ${result.status} Response : ${JSON.stringify(result.response)}`)
            if (result.status !== 201) {
              console.log('Failed to create check run')
            }
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: python -m pip install -r requirements.txt

      - name: run tests in parallel
        run: browserstack-sdk behave features/test.feature

      - name: run local tests in parallel
        run: browserstack-sdk behave features/local-test.feature

      - if: always()
        uses: actions/github-script@98814c53be79b1d30f795b907e553d8679345975
        id: status-check-completed
        env:
          conclusion: ${{ job.status }}
          job_name: Behave Repo ${{ matrix.python }} - ${{ matrix.os }} Sample
        with:
          github-token: ${{ github.token }}
          script: |
            const result = await github.rest.checks.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            name: process.env.job_name,
            head_sha: process.env.commit_sha,
            status: 'completed',
            conclusion: process.env.conclusion
            }).catch((err) => ({status: err.status, response: err.response}));
            console.log(`The status-check response : ${result.status} Response : ${JSON.stringify(result.response)}`)
            if (result.status !== 201) {
              console.log('Failed to create check run')
            }
